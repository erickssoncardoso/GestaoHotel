/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package telas;

/**
 *
 * @author ecardoso
 */
import dao.AcomodacaoDAO;
import dao.HotelDAO;
import dao.ReservaDAO;
import dao.UtilizadoresDAO;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import model.Cliente;
import model.Funcionario;
import model.Hotel;
import model.Reserva;
import model.Utilizadores;
import model.acomodacao.Acomodacao;
import model.acomodacao.QuartoSimples;
import model.acomodacao.SuitePresidencial;
import util.SessionManager;



public class TelaReservaCliente extends javax.swing.JInternalFrame {
  private JLabel tipoLabel;
    private JLabel leitosLabel;
    private JLabel precoLabel;
    private JTextField tipoField;
    private JTextField leitosField;
    private JTextField precoField;
    private JButton adicionarButton;
    private JButton atualizarButton;
    private JButton excluirButton;
    /**
     * Creates new form TelaAcomodacao
     */
    public TelaReservaCliente() {
        initComponents();
        preencherIdCliente();
        atualizarTabelaReservas();
          carregarNomesHoteis();
        
        
    }
    private void limparCampos() {
    txtIdReserva.setText("");
    txtIdCliente.setText("");
    txtIdAcomodacao.setText("");
    DateCheckin.setDate(null);
    DateCheckout.setDate(null);
    comboHotel.setSelectedIndex(0); // Define a seleção do combo box para o primeiro item
}
    
    private void preencherIdCliente() {
    // Obter o nome de usuário logado
    String loggedInUsername = SessionManager.getLoggedInUsername();

    // Obter o ID do utilizador a partir do nome de usuário
    UtilizadoresDAO utilizadoresDAO = new UtilizadoresDAO();
    int idCliente = utilizadoresDAO.buscarIdPeloUsername(loggedInUsername);

    // Preencher o campo txtIdCliente automaticamente
    txtIdCliente.setText(String.valueOf(idCliente));
}
    
    private void carregarNomesHoteis() {
    HotelDAO hotelDAO = new HotelDAO();
    List<String> nomesHoteis = hotelDAO.listarNomesHoteis(); // Assumindo que listarNomesHoteis() retorna uma lista de Strings

    DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
    for (String nomeHotel : nomesHoteis) {
        model.addElement(nomeHotel); // Adiciona o nome do hotel ao modelo
    }

    comboHotel.setModel(model); // Define o modelo no JComboBox comboHotel
}
    
    private void atualizarTabelaReservas() {
      ReservaDAO reservaDAO = new ReservaDAO();
    List<Reserva> reservas = reservaDAO.obterTodasReservas();
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0);

    for (Reserva reserva : reservas) {
        model.addRow(new Object[]{
            reserva.getId(),
            reserva.getIdCliente(),
            reserva.getIdHotel(),
            reserva.getIdAcomodacao(),
            reserva.getDataCheckin(),
            reserva.getDataCheckout()
        });
    }
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtIdAcomodacao = new javax.swing.JTextField();
        btnAdicionar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtIdCliente = new javax.swing.JTextField();
        btnAtualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        DateCheckout = new com.toedter.calendar.JDateChooser();
        DateCheckin = new com.toedter.calendar.JDateChooser();
        txtIdReserva = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        comboHotel = new javax.swing.JComboBox<>();

        setClosable(true);

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id_Reserva", "Id_Cliente", "id_Hotel", "Id_Acomodação", "Data Check-in", "Data Check-out"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("ID Cliente");

        jLabel2.setText("Data Check-Out");

        jLabel4.setText("ID Acomodação");

        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        jLabel3.setText("Hotel");

        txtIdCliente.setEditable(false);
        txtIdCliente.setBackground(new java.awt.Color(204, 204, 204));

        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Cancelar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Gestão de Reservas");

        jLabel6.setText("Data Check-In");

        txtIdReserva.setBackground(new java.awt.Color(204, 204, 204));
        txtIdReserva.setEnabled(false);

        jLabel7.setText("ID Reserva");

        comboHotel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 841, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6)
                                .addComponent(txtIdAcomodacao, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(DateCheckin, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(DateCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtIdReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(comboHotel, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(btnAdicionar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnEliminar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnAtualizar)))
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(17, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtIdReserva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboHotel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtIdAcomodacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DateCheckin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(DateCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdicionar)
                            .addComponent(btnEliminar)
                            .addComponent(btnAtualizar))
                        .addGap(48, 48, 48))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
     // Capturar os dados selecionados e inseridos pelo usuário
    int idCliente = Integer.parseInt(txtIdCliente.getText()); // Captura o ID do cliente
    String nomeHotel = (String) comboHotel.getSelectedItem(); // Captura o nome do hotel
    int idAcomodacao = Integer.parseInt(txtIdAcomodacao.getText()); // Captura o ID da acomodação
    Date dataCheckin = DateCheckin.getDate(); // Captura a data de check-in
    Date dataCheckout = DateCheckout.getDate(); // Captura a data de check-out
    
    // Validar se todos os campos necessários foram preenchidos
    if (nomeHotel.isEmpty() || dataCheckin == null || dataCheckout == null) {
        JOptionPane.showMessageDialog(this, "Preencha todos os campos obrigatórios.");
        return;
    }
    
    // Aqui você pode adicionar a lógica para converter o nome do hotel em ID usando HotelDAO
    HotelDAO hotelDAO = new HotelDAO();
    int idHotel = hotelDAO.buscarIdPeloNome(nomeHotel);

    // Criar um objeto Reserva com os dados capturados
    Reserva reserva = new Reserva(idCliente, idHotel, idAcomodacao, dataCheckin, dataCheckout);

    // Adicionar a reserva ao banco de dados usando ReservaDAO
    ReservaDAO reservaDAO = new ReservaDAO();
    if (reservaDAO.adicionarReserva(reserva)) {
        JOptionPane.showMessageDialog(this, "Reserva adicionada com sucesso!");
        limparCampos(); // Limpar os campos após adicionar a reserva com sucesso
        atualizarTabelaReservas(); // Atualizar a tabela de reservas
    } else {
        JOptionPane.showMessageDialog(this, "Erro ao adicionar reserva.");
    }
    }//GEN-LAST:event_btnAdicionarActionPerformed



    
    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
            // Obtém o índice da linha selecionada
    int rowIndex = jTable1.getSelectedRow();

    // Verifica se uma linha foi realmente selecionada
    if (rowIndex != -1) {
        // Obtém os dados da reserva selecionada
        int idReserva = (int) jTable1.getValueAt(rowIndex, 0);
        int idCliente = (int) jTable1.getValueAt(rowIndex, 1);
        int idHotel = (int) jTable1.getValueAt(rowIndex, 2);
        int idAcomodacao = (int) jTable1.getValueAt(rowIndex, 3);
        Date dataCheckin = (Date) jTable1.getValueAt(rowIndex, 4);
        Date dataCheckout = (Date) jTable1.getValueAt(rowIndex, 5);

        // Exibe os dados nos campos de texto ou em outros componentes
        txtIdReserva.setText(String.valueOf(idReserva));
        txtIdCliente.setText(String.valueOf(idCliente));
        txtIdAcomodacao.setText(String.valueOf(idAcomodacao));
        DateCheckin.setDate(dataCheckin);
        DateCheckout.setDate(dataCheckout);
    }
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
     
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
            int linhaSelecionada = jTable1.getSelectedRow();
    if (linhaSelecionada == -1) {
        JOptionPane.showMessageDialog(this, "Selecione uma reserva para excluir.");
        return;
    }

    int idReserva = (int) jTable1.getValueAt(linhaSelecionada, 0);
    if (JOptionPane.showConfirmDialog(this, "Deseja realmente excluir esta reserva?", "Confirmar exclusão", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
        ReservaDAO reservaDAO = new ReservaDAO();
        if (reservaDAO.excluirReserva(idReserva)) {
            JOptionPane.showMessageDialog(this, "Reserva excluída com sucesso!");
            atualizarTabelaReservas();
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao excluir reserva.");
        }
    }
    }//GEN-LAST:event_btnEliminarActionPerformed
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DateCheckin;
    private com.toedter.calendar.JDateChooser DateCheckout;
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JComboBox<String> comboHotel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtIdAcomodacao;
    private javax.swing.JTextField txtIdCliente;
    private javax.swing.JTextField txtIdReserva;
    // End of variables declaration//GEN-END:variables
}
